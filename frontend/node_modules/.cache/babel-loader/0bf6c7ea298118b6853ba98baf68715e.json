{"ast":null,"code":"export class GreeterClient {}\nexport class GreeterPromiseClient {}","map":{"version":3,"names":["GreeterClient","GreeterPromiseClient"],"sources":["/Users/ru/Documents/CS/工作/current/web3-grpc/frontend/src/helloworld_grpc_web_pb.d.ts"],"sourcesContent":["import * as grpcWeb from 'grpc-web';\n\nimport * as src_helloworld_pb from '../src/helloworld_pb';\n\n\nexport class GreeterClient {\n  constructor (hostname: string,\n               credentials?: null | { [index: string]: string; },\n               options?: null | { [index: string]: any; });\n\n  sayHello(\n    request: src_helloworld_pb.HelloRequest,\n    metadata: grpcWeb.Metadata | undefined,\n    callback: (err: grpcWeb.RpcError,\n               response: src_helloworld_pb.HelloReply) => void\n  ): grpcWeb.ClientReadableStream<src_helloworld_pb.HelloReply>;\n\n  sayRepeatHello(\n    request: src_helloworld_pb.RepeatHelloRequest,\n    metadata?: grpcWeb.Metadata\n  ): grpcWeb.ClientReadableStream<src_helloworld_pb.HelloReply>;\n\n}\n\nexport class GreeterPromiseClient {\n  constructor (hostname: string,\n               credentials?: null | { [index: string]: string; },\n               options?: null | { [index: string]: any; });\n\n  sayHello(\n    request: src_helloworld_pb.HelloRequest,\n    metadata?: grpcWeb.Metadata\n  ): Promise<src_helloworld_pb.HelloReply>;\n\n  sayRepeatHello(\n    request: src_helloworld_pb.RepeatHelloRequest,\n    metadata?: grpcWeb.Metadata\n  ): grpcWeb.ClientReadableStream<src_helloworld_pb.HelloReply>;\n\n}\n\n"],"mappings":"AAKA,OAAO,MAAMA,aAAN,CAAoB;AAmB3B,OAAO,MAAMC,oBAAN,CAA2B"},"metadata":{},"sourceType":"module"}